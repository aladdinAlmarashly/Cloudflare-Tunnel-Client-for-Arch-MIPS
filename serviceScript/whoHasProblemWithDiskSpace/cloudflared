#!/bin/sh /etc/rc.common

START=99
STOP=01

USE_PROCD=1
PROG=/tmp/cloudflared
name=$(basename $PROG)
pid_file="/var/run/$name.pid"
token="your_token"

start_service() {
    # Define the URL of the cloudflared binary
    local url="https://raw.githubusercontent.com/aladdinAlmarashly/Cloudflare-Tunnel-Client-for-Arch-MIPS/main/cloudflardReleases/2024.1.5/cloudflared"

    # Define the destination file path
    local file="/tmp/cloudflared"

    # Download cloudflared if it doesn't exist
    if [ ! -f "$file" ]; then
        echo "Downloading cloudflared..."
        wget -O "$file" "$url" || {
            echo "Failed to download cloudflared"
            return 1
        }
        chmod +x "$file"
    fi

    procd_open_instance
    procd_set_param command "$PROG" --pidfile "$pid_file" --protocol h2mux --autoupdate-freq 24h0m0s tunnel run --token "$token"
    procd_set_param stdout 1
    procd_set_param stderr 1
    procd_close_instance
}

stop_service() {
    kill $(cat "$pid_file")
}

service_status() {
    if [ -f "$pid_file" ] && kill -0 $(cat "$pid_file") 2>/dev/null; then
        echo "Service $name is running."
    else
        echo "Service $name is stopped."
    fi
}

service_triggers() {
    procd_add_reload_trigger "cloudflared"
}

reload_service() {
    stop
    start
}